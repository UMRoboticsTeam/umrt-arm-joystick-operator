name: Build library

on:
  push:
    branches:
      - master
      - ci-cd

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/umroboticsteam/umrt-build:testing-docker-build

    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          path: ./src
          submodules: 'true'

      - name: Prepare to build debian
        working-directory: ./src
        run: |
          . /opt/ros/humble/setup.sh
          rosdep update
          bloom-generate rosdebian

      - name: Build debian
        working-directory: ./src
        run: fakeroot debian/rules binary

      - name: Encrypt deb
        working-directory: .
        run: |
          echo -n "$APT_SIGNING_PUBKEY" | gpg --import
          gpg --encrypt --recipient exec.umrt@gmail.com --trust-model tofu --use-embedded-filename *.deb
        env:
          APT_SIGNING_PUBKEY: ${{ secrets.APT_SIGNING_PUBKEY }}

      - name: Pass encrypted deb to publishing container
        uses: actions/upload-artifact@v4
        with:
          name: encrypted-deb
          path: "*.deb.gpg"

  publish:
    needs: build

    runs-on: ubuntu-latest
    container:
      image: ghcr.io/umroboticsteam/umrt-apt-image:initial-setup

    steps:
      - name: Download deb
        uses: actions/download-artifact@v4
        with:
          name: encrypted-deb
          path: ./deb

      - name: Delete deb artifact
        uses: geekyeggo/delete-artifact@v5
        with:
          name: encrypted-deb

      - name: Checkout apt repo
        uses: actions/checkout@v4
        with:
          repository: 'UMRoboticsTeam/umrt-apt-repo'
          path: ./apt
          ref: 'testing-ci-cd'
          # Note that this is persisted in the local Git config until the post-job task
          persist-credentials: true
          ssh-key: ${{ secrets.APT_DEPLOY_KEY }}

      - name: Load signing key and decrypt deb
        working-directory: ./deb
        run: |
          echo -n "$APT_SIGNING_KEY" | gpg --import
          gpg --decrypt --use-embedded-filename *.deb.gpg
          rm *.deb.gpg
        env:
          APT_SIGNING_KEY: ${{ secrets.APT_SIGNING_KEY }}

      - name: Publish debians
        working-directory: ./apt
        run: reprepro --section arm --component main --priority 0 includedeb humble ../deb/*.deb

      - name: Push apt repo
        working-directory: ./apt
        shell: bash
        run: |
          git config user.name 'University of Manitoba Robotics Team Build Server'
          git config user.email 'exec.umrt@gmail.com'
          git config user.signingkey "$(gpg --list-signatures $(git config --get user.email) | sed -n '/^\s/s/\s*//p')"
          git add --all
          git commit -S -m "Uploaded new version of ${{ github.repository }}"
          git push origin
